// Generated by view binder compiler. Do not edit!
package com.example.communityengagementtracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.communityengagementtracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityTrackerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Agency;

  @NonNull
  public final TextView Comments;

  @NonNull
  public final TextView Date;

  @NonNull
  public final TextView EndTime;

  @NonNull
  public final TextView Location;

  @NonNull
  public final TextView PartnerName;

  @NonNull
  public final TextView StartTime;

  @NonNull
  public final TextView StudentName;

  @NonNull
  public final EditText editTextAgency;

  @NonNull
  public final EditText editTextComments;

  @NonNull
  public final EditText editTextDate;

  @NonNull
  public final EditText editTextLocation;

  @NonNull
  public final EditText editTextPartnerName;

  @NonNull
  public final EditText editTextStudentName;

  @NonNull
  public final EditText editTextTime;

  @NonNull
  public final EditText editTextTime2;

  @NonNull
  public final Button submit;

  private ActivityTrackerBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Agency,
      @NonNull TextView Comments, @NonNull TextView Date, @NonNull TextView EndTime,
      @NonNull TextView Location, @NonNull TextView PartnerName, @NonNull TextView StartTime,
      @NonNull TextView StudentName, @NonNull EditText editTextAgency,
      @NonNull EditText editTextComments, @NonNull EditText editTextDate,
      @NonNull EditText editTextLocation, @NonNull EditText editTextPartnerName,
      @NonNull EditText editTextStudentName, @NonNull EditText editTextTime,
      @NonNull EditText editTextTime2, @NonNull Button submit) {
    this.rootView = rootView;
    this.Agency = Agency;
    this.Comments = Comments;
    this.Date = Date;
    this.EndTime = EndTime;
    this.Location = Location;
    this.PartnerName = PartnerName;
    this.StartTime = StartTime;
    this.StudentName = StudentName;
    this.editTextAgency = editTextAgency;
    this.editTextComments = editTextComments;
    this.editTextDate = editTextDate;
    this.editTextLocation = editTextLocation;
    this.editTextPartnerName = editTextPartnerName;
    this.editTextStudentName = editTextStudentName;
    this.editTextTime = editTextTime;
    this.editTextTime2 = editTextTime2;
    this.submit = submit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityTrackerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityTrackerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_tracker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityTrackerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Agency;
      TextView Agency = ViewBindings.findChildViewById(rootView, id);
      if (Agency == null) {
        break missingId;
      }

      id = R.id.Comments;
      TextView Comments = ViewBindings.findChildViewById(rootView, id);
      if (Comments == null) {
        break missingId;
      }

      id = R.id.Date;
      TextView Date = ViewBindings.findChildViewById(rootView, id);
      if (Date == null) {
        break missingId;
      }

      id = R.id.EndTime;
      TextView EndTime = ViewBindings.findChildViewById(rootView, id);
      if (EndTime == null) {
        break missingId;
      }

      id = R.id.Location;
      TextView Location = ViewBindings.findChildViewById(rootView, id);
      if (Location == null) {
        break missingId;
      }

      id = R.id.PartnerName;
      TextView PartnerName = ViewBindings.findChildViewById(rootView, id);
      if (PartnerName == null) {
        break missingId;
      }

      id = R.id.StartTime;
      TextView StartTime = ViewBindings.findChildViewById(rootView, id);
      if (StartTime == null) {
        break missingId;
      }

      id = R.id.StudentName;
      TextView StudentName = ViewBindings.findChildViewById(rootView, id);
      if (StudentName == null) {
        break missingId;
      }

      id = R.id.editTextAgency;
      EditText editTextAgency = ViewBindings.findChildViewById(rootView, id);
      if (editTextAgency == null) {
        break missingId;
      }

      id = R.id.editTextComments;
      EditText editTextComments = ViewBindings.findChildViewById(rootView, id);
      if (editTextComments == null) {
        break missingId;
      }

      id = R.id.editTextDate;
      EditText editTextDate = ViewBindings.findChildViewById(rootView, id);
      if (editTextDate == null) {
        break missingId;
      }

      id = R.id.editTextLocation;
      EditText editTextLocation = ViewBindings.findChildViewById(rootView, id);
      if (editTextLocation == null) {
        break missingId;
      }

      id = R.id.editTextPartnerName;
      EditText editTextPartnerName = ViewBindings.findChildViewById(rootView, id);
      if (editTextPartnerName == null) {
        break missingId;
      }

      id = R.id.editTextStudentName;
      EditText editTextStudentName = ViewBindings.findChildViewById(rootView, id);
      if (editTextStudentName == null) {
        break missingId;
      }

      id = R.id.editTextTime;
      EditText editTextTime = ViewBindings.findChildViewById(rootView, id);
      if (editTextTime == null) {
        break missingId;
      }

      id = R.id.editTextTime2;
      EditText editTextTime2 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTime2 == null) {
        break missingId;
      }

      id = R.id.submit;
      Button submit = ViewBindings.findChildViewById(rootView, id);
      if (submit == null) {
        break missingId;
      }

      return new ActivityTrackerBinding((ConstraintLayout) rootView, Agency, Comments, Date,
          EndTime, Location, PartnerName, StartTime, StudentName, editTextAgency, editTextComments,
          editTextDate, editTextLocation, editTextPartnerName, editTextStudentName, editTextTime,
          editTextTime2, submit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
